package FwmNcProto;

//无需protobuf传递参数
//MSG_FWM_NC_REQUEST_RESOURCE_ACK
//MSG_FWM_NC_RETURN_RESOURCE_ACK

//FWM->NC
//需要protobuf传递参数
//MSG_FWM_NC_START_SLAVE
//MSG_FWM_NC_START_SLAVE_ACK
//MSG_FWM_NC_REQUEST_RESOURCE
//MSG_FWM_NC_RETURN_RESOURCE

//需要共同使用的message
message GpuResourceInfo
{
    required string gpu_name = 1;//GPU名
    optional uint32 gpu_mem_size = 2; //GPU内存大小
}

message ResourceInfo
{
    required double cpu_num = 1; //逻辑cpu个数
    required uint32 cpu_mem_size = 2; //内存大小，单位为MB
    optional uint32 gpu_num = 3; // 物理GPU个数
    repeated GpuResourceInfo gpu_resource_info = 4;//GPU资源信息（其中查询资源类消息才带有此字段）
}

message FrameworkInstanceInfo
{
    required uint32 framework_id = 1; //框架ID
    required uint32 framework_instance_id = 2; //框架实例ID
}

message FrameworkResourceInfo
{
    required FrameworkInstanceInfo framework_instance_info = 1;//框架实例信息
    optional ResourceInfo resource_info = 2;//资源信息
    optional uint32 module_PID = 3;//模块进程号
}

//分别针对需要protobuf传递参数的协议进行定义
//MSG_FWM_NC_START_SLAVE
message DockerImageInfo
{
    required string tag = 1;//image文件在docker仓库中的标签
    optional string locate_file = 2;//镜像类模块位置的定位文件
    optional string module_name = 3;//模块名
}

message NetAddress
{
    required string ip = 1;//FW Master的ip
    optional uint32 port = 2;//FW Master的端口号
}

message StartSlave
{
    required FrameworkInstanceInfo framework_instance_info = 1;//框架实例信息
    optional DockerImageInfo docker_image_info = 2;//docker镜像信息
    optional ResourceInfo resource_info = 3;//该模块的资源量
	optional uint32 listen_port_num = 4; //监听端口个数
    optional NetAddress FM_master_net_address = 5;//启动后连接FW Master的IP和PORT
}

//MSG_FWM_NC_START_SLAVE_ACK
message RespondStartSlave
{
    required FrameworkInstanceInfo framework_instance_info = 1;//框架实例信息
    optional string machine_ip = 2;//模块所在机器IP
    optional uint32 module_PID = 3;//模块的进程号
}


//MSG_FWM_NC_REQUEST_RESOURCE
//负载为FrameworkResourceInfo

//MSG_FWM_NC_RETURN_RESOURCE
//负载为FrameworkResourceInfo



// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FwmRcProtocol.proto

#ifndef PROTOBUF_FwmRcProtocol_2eproto__INCLUDED
#define PROTOBUF_FwmRcProtocol_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace FwmRcProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_FwmRcProtocol_2eproto();
void protobuf_AssignDesc_FwmRcProtocol_2eproto();
void protobuf_ShutdownFile_FwmRcProtocol_2eproto();

class FrameworkInstanceInfo;
class GpuResourceInfo;
class ResourceInfo;
class EachModuleRequestOrReturnResourceInfo;
class NetAddress;
class Register;
class RegisterAck;
class EachModuleResourceInfo;
class RequestStartSlave;
class RequestStartSlaveAck;
class RequestTaskResource;
class RequestTaskResourceAck;
class ReturnTaskResource;
class ReturnTaskResourceAck;
class StopModule;
class StopModuleAck;
class HeartBeatInfo;
class HeartBeatInfoAck;
class CloseFrameworkInstanceInfo;
class CloseFrameworkInstanceInfoAck;

// ===================================================================

class FrameworkInstanceInfo : public ::google::protobuf::Message {
 public:
  FrameworkInstanceInfo();
  virtual ~FrameworkInstanceInfo();
  
  FrameworkInstanceInfo(const FrameworkInstanceInfo& from);
  
  inline FrameworkInstanceInfo& operator=(const FrameworkInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameworkInstanceInfo& default_instance();
  
  void Swap(FrameworkInstanceInfo* other);
  
  // implements Message ----------------------------------------------
  
  FrameworkInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FrameworkInstanceInfo& from);
  void MergeFrom(const FrameworkInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 framework_id = 1;
  inline bool has_framework_id() const;
  inline void clear_framework_id();
  static const int kFrameworkIdFieldNumber = 1;
  inline ::google::protobuf::uint32 framework_id() const;
  inline void set_framework_id(::google::protobuf::uint32 value);
  
  // required uint32 framework_instance_id = 2;
  inline bool has_framework_instance_id() const;
  inline void clear_framework_instance_id();
  static const int kFrameworkInstanceIdFieldNumber = 2;
  inline ::google::protobuf::uint32 framework_instance_id() const;
  inline void set_framework_instance_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.FrameworkInstanceInfo)
 private:
  inline void set_has_framework_id();
  inline void clear_has_framework_id();
  inline void set_has_framework_instance_id();
  inline void clear_has_framework_instance_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 framework_id_;
  ::google::protobuf::uint32 framework_instance_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static FrameworkInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class GpuResourceInfo : public ::google::protobuf::Message {
 public:
  GpuResourceInfo();
  virtual ~GpuResourceInfo();
  
  GpuResourceInfo(const GpuResourceInfo& from);
  
  inline GpuResourceInfo& operator=(const GpuResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GpuResourceInfo& default_instance();
  
  void Swap(GpuResourceInfo* other);
  
  // implements Message ----------------------------------------------
  
  GpuResourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GpuResourceInfo& from);
  void MergeFrom(const GpuResourceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string gpu_name = 1;
  inline bool has_gpu_name() const;
  inline void clear_gpu_name();
  static const int kGpuNameFieldNumber = 1;
  inline const ::std::string& gpu_name() const;
  inline void set_gpu_name(const ::std::string& value);
  inline void set_gpu_name(const char* value);
  inline void set_gpu_name(const char* value, size_t size);
  inline ::std::string* mutable_gpu_name();
  inline ::std::string* release_gpu_name();
  
  // optional uint32 gpu_mem_size = 2;
  inline bool has_gpu_mem_size() const;
  inline void clear_gpu_mem_size();
  static const int kGpuMemSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 gpu_mem_size() const;
  inline void set_gpu_mem_size(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.GpuResourceInfo)
 private:
  inline void set_has_gpu_name();
  inline void clear_has_gpu_name();
  inline void set_has_gpu_mem_size();
  inline void clear_has_gpu_mem_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* gpu_name_;
  ::google::protobuf::uint32 gpu_mem_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static GpuResourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class ResourceInfo : public ::google::protobuf::Message {
 public:
  ResourceInfo();
  virtual ~ResourceInfo();
  
  ResourceInfo(const ResourceInfo& from);
  
  inline ResourceInfo& operator=(const ResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResourceInfo& default_instance();
  
  void Swap(ResourceInfo* other);
  
  // implements Message ----------------------------------------------
  
  ResourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ResourceInfo& from);
  void MergeFrom(const ResourceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required double cpu_num = 1;
  inline bool has_cpu_num() const;
  inline void clear_cpu_num();
  static const int kCpuNumFieldNumber = 1;
  inline double cpu_num() const;
  inline void set_cpu_num(double value);
  
  // required uint32 cpu_mem_size = 2;
  inline bool has_cpu_mem_size() const;
  inline void clear_cpu_mem_size();
  static const int kCpuMemSizeFieldNumber = 2;
  inline ::google::protobuf::uint32 cpu_mem_size() const;
  inline void set_cpu_mem_size(::google::protobuf::uint32 value);
  
  // optional uint32 gpu_num = 3;
  inline bool has_gpu_num() const;
  inline void clear_gpu_num();
  static const int kGpuNumFieldNumber = 3;
  inline ::google::protobuf::uint32 gpu_num() const;
  inline void set_gpu_num(::google::protobuf::uint32 value);
  
  // repeated .FwmRcProto.GpuResourceInfo gpu_resource_info = 4;
  inline int gpu_resource_info_size() const;
  inline void clear_gpu_resource_info();
  static const int kGpuResourceInfoFieldNumber = 4;
  inline const ::FwmRcProto::GpuResourceInfo& gpu_resource_info(int index) const;
  inline ::FwmRcProto::GpuResourceInfo* mutable_gpu_resource_info(int index);
  inline ::FwmRcProto::GpuResourceInfo* add_gpu_resource_info();
  inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::GpuResourceInfo >&
      gpu_resource_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::GpuResourceInfo >*
      mutable_gpu_resource_info();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.ResourceInfo)
 private:
  inline void set_has_cpu_num();
  inline void clear_has_cpu_num();
  inline void set_has_cpu_mem_size();
  inline void clear_has_cpu_mem_size();
  inline void set_has_gpu_num();
  inline void clear_has_gpu_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double cpu_num_;
  ::google::protobuf::uint32 cpu_mem_size_;
  ::google::protobuf::uint32 gpu_num_;
  ::google::protobuf::RepeatedPtrField< ::FwmRcProto::GpuResourceInfo > gpu_resource_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static ResourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class EachModuleRequestOrReturnResourceInfo : public ::google::protobuf::Message {
 public:
  EachModuleRequestOrReturnResourceInfo();
  virtual ~EachModuleRequestOrReturnResourceInfo();
  
  EachModuleRequestOrReturnResourceInfo(const EachModuleRequestOrReturnResourceInfo& from);
  
  inline EachModuleRequestOrReturnResourceInfo& operator=(const EachModuleRequestOrReturnResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EachModuleRequestOrReturnResourceInfo& default_instance();
  
  void Swap(EachModuleRequestOrReturnResourceInfo* other);
  
  // implements Message ----------------------------------------------
  
  EachModuleRequestOrReturnResourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EachModuleRequestOrReturnResourceInfo& from);
  void MergeFrom(const EachModuleRequestOrReturnResourceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 resource_request_or_return_to_module_id = 1;
  inline bool has_resource_request_or_return_to_module_id() const;
  inline void clear_resource_request_or_return_to_module_id();
  static const int kResourceRequestOrReturnToModuleIdFieldNumber = 1;
  inline ::google::protobuf::uint32 resource_request_or_return_to_module_id() const;
  inline void set_resource_request_or_return_to_module_id(::google::protobuf::uint32 value);
  
  // optional .FwmRcProto.ResourceInfo resource_info = 2;
  inline bool has_resource_info() const;
  inline void clear_resource_info();
  static const int kResourceInfoFieldNumber = 2;
  inline const ::FwmRcProto::ResourceInfo& resource_info() const;
  inline ::FwmRcProto::ResourceInfo* mutable_resource_info();
  inline ::FwmRcProto::ResourceInfo* release_resource_info();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.EachModuleRequestOrReturnResourceInfo)
 private:
  inline void set_has_resource_request_or_return_to_module_id();
  inline void clear_has_resource_request_or_return_to_module_id();
  inline void set_has_resource_info();
  inline void clear_has_resource_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::ResourceInfo* resource_info_;
  ::google::protobuf::uint32 resource_request_or_return_to_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static EachModuleRequestOrReturnResourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class NetAddress : public ::google::protobuf::Message {
 public:
  NetAddress();
  virtual ~NetAddress();
  
  NetAddress(const NetAddress& from);
  
  inline NetAddress& operator=(const NetAddress& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetAddress& default_instance();
  
  void Swap(NetAddress* other);
  
  // implements Message ----------------------------------------------
  
  NetAddress* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetAddress& from);
  void MergeFrom(const NetAddress& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional uint32 port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline ::google::protobuf::uint32 port() const;
  inline void set_port(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.NetAddress)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ip_;
  ::google::protobuf::uint32 port_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static NetAddress* default_instance_;
};
// -------------------------------------------------------------------

class Register : public ::google::protobuf::Message {
 public:
  Register();
  virtual ~Register();
  
  Register(const Register& from);
  
  inline Register& operator=(const Register& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Register& default_instance();
  
  void Swap(Register* other);
  
  // implements Message ----------------------------------------------
  
  Register* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Register& from);
  void MergeFrom(const Register& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // optional .FwmRcProto.NetAddress data_search_entry = 3;
  inline bool has_data_search_entry() const;
  inline void clear_data_search_entry();
  static const int kDataSearchEntryFieldNumber = 3;
  inline const ::FwmRcProto::NetAddress& data_search_entry() const;
  inline ::FwmRcProto::NetAddress* mutable_data_search_entry();
  inline ::FwmRcProto::NetAddress* release_data_search_entry();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.Register)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  inline void set_has_data_search_entry();
  inline void clear_has_data_search_entry();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::FwmRcProto::NetAddress* data_search_entry_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static Register* default_instance_;
};
// -------------------------------------------------------------------

class RegisterAck : public ::google::protobuf::Message {
 public:
  RegisterAck();
  virtual ~RegisterAck();
  
  RegisterAck(const RegisterAck& from);
  
  inline RegisterAck& operator=(const RegisterAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterAck& default_instance();
  
  void Swap(RegisterAck* other);
  
  // implements Message ----------------------------------------------
  
  RegisterAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RegisterAck& from);
  void MergeFrom(const RegisterAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.RegisterAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RegisterAck* default_instance_;
};
// -------------------------------------------------------------------

class EachModuleResourceInfo : public ::google::protobuf::Message {
 public:
  EachModuleResourceInfo();
  virtual ~EachModuleResourceInfo();
  
  EachModuleResourceInfo(const EachModuleResourceInfo& from);
  
  inline EachModuleResourceInfo& operator=(const EachModuleResourceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EachModuleResourceInfo& default_instance();
  
  void Swap(EachModuleResourceInfo* other);
  
  // implements Message ----------------------------------------------
  
  EachModuleResourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EachModuleResourceInfo& from);
  void MergeFrom(const EachModuleResourceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional .FwmRcProto.ResourceInfo resource_info = 2;
  inline bool has_resource_info() const;
  inline void clear_resource_info();
  static const int kResourceInfoFieldNumber = 2;
  inline const ::FwmRcProto::ResourceInfo& resource_info() const;
  inline ::FwmRcProto::ResourceInfo* mutable_resource_info();
  inline ::FwmRcProto::ResourceInfo* release_resource_info();
  
  // optional uint32 listen_port_num = 3;
  inline bool has_listen_port_num() const;
  inline void clear_listen_port_num();
  static const int kListenPortNumFieldNumber = 3;
  inline ::google::protobuf::uint32 listen_port_num() const;
  inline void set_listen_port_num(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.EachModuleResourceInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_resource_info();
  inline void clear_has_resource_info();
  inline void set_has_listen_port_num();
  inline void clear_has_listen_port_num();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ip_;
  ::FwmRcProto::ResourceInfo* resource_info_;
  ::google::protobuf::uint32 listen_port_num_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static EachModuleResourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class RequestStartSlave : public ::google::protobuf::Message {
 public:
  RequestStartSlave();
  virtual ~RequestStartSlave();
  
  RequestStartSlave(const RequestStartSlave& from);
  
  inline RequestStartSlave& operator=(const RequestStartSlave& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStartSlave& default_instance();
  
  void Swap(RequestStartSlave* other);
  
  // implements Message ----------------------------------------------
  
  RequestStartSlave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStartSlave& from);
  void MergeFrom(const RequestStartSlave& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // repeated .FwmRcProto.EachModuleResourceInfo start_module_resource_info = 3;
  inline int start_module_resource_info_size() const;
  inline void clear_start_module_resource_info();
  static const int kStartModuleResourceInfoFieldNumber = 3;
  inline const ::FwmRcProto::EachModuleResourceInfo& start_module_resource_info(int index) const;
  inline ::FwmRcProto::EachModuleResourceInfo* mutable_start_module_resource_info(int index);
  inline ::FwmRcProto::EachModuleResourceInfo* add_start_module_resource_info();
  inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleResourceInfo >&
      start_module_resource_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleResourceInfo >*
      mutable_start_module_resource_info();
  
  // optional .FwmRcProto.NetAddress FWM_net_address = 4;
  inline bool has_fwm_net_address() const;
  inline void clear_fwm_net_address();
  static const int kFWMNetAddressFieldNumber = 4;
  inline const ::FwmRcProto::NetAddress& fwm_net_address() const;
  inline ::FwmRcProto::NetAddress* mutable_fwm_net_address();
  inline ::FwmRcProto::NetAddress* release_fwm_net_address();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.RequestStartSlave)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  inline void set_has_fwm_net_address();
  inline void clear_has_fwm_net_address();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleResourceInfo > start_module_resource_info_;
  ::FwmRcProto::NetAddress* fwm_net_address_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RequestStartSlave* default_instance_;
};
// -------------------------------------------------------------------

class RequestStartSlaveAck : public ::google::protobuf::Message {
 public:
  RequestStartSlaveAck();
  virtual ~RequestStartSlaveAck();
  
  RequestStartSlaveAck(const RequestStartSlaveAck& from);
  
  inline RequestStartSlaveAck& operator=(const RequestStartSlaveAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestStartSlaveAck& default_instance();
  
  void Swap(RequestStartSlaveAck* other);
  
  // implements Message ----------------------------------------------
  
  RequestStartSlaveAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestStartSlaveAck& from);
  void MergeFrom(const RequestStartSlaveAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // repeated uint32 module_id = 2;
  inline int module_id_size() const;
  inline void clear_module_id();
  static const int kModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 module_id(int index) const;
  inline void set_module_id(int index, ::google::protobuf::uint32 value);
  inline void add_module_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      module_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_module_id();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.RequestStartSlaveAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > module_id_;
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RequestStartSlaveAck* default_instance_;
};
// -------------------------------------------------------------------

class RequestTaskResource : public ::google::protobuf::Message {
 public:
  RequestTaskResource();
  virtual ~RequestTaskResource();
  
  RequestTaskResource(const RequestTaskResource& from);
  
  inline RequestTaskResource& operator=(const RequestTaskResource& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestTaskResource& default_instance();
  
  void Swap(RequestTaskResource* other);
  
  // implements Message ----------------------------------------------
  
  RequestTaskResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestTaskResource& from);
  void MergeFrom(const RequestTaskResource& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // repeated .FwmRcProto.EachModuleRequestOrReturnResourceInfo module_add_resource_info = 3;
  inline int module_add_resource_info_size() const;
  inline void clear_module_add_resource_info();
  static const int kModuleAddResourceInfoFieldNumber = 3;
  inline const ::FwmRcProto::EachModuleRequestOrReturnResourceInfo& module_add_resource_info(int index) const;
  inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* mutable_module_add_resource_info(int index);
  inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* add_module_add_resource_info();
  inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >&
      module_add_resource_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >*
      mutable_module_add_resource_info();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.RequestTaskResource)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo > module_add_resource_info_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RequestTaskResource* default_instance_;
};
// -------------------------------------------------------------------

class RequestTaskResourceAck : public ::google::protobuf::Message {
 public:
  RequestTaskResourceAck();
  virtual ~RequestTaskResourceAck();
  
  RequestTaskResourceAck(const RequestTaskResourceAck& from);
  
  inline RequestTaskResourceAck& operator=(const RequestTaskResourceAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestTaskResourceAck& default_instance();
  
  void Swap(RequestTaskResourceAck* other);
  
  // implements Message ----------------------------------------------
  
  RequestTaskResourceAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RequestTaskResourceAck& from);
  void MergeFrom(const RequestTaskResourceAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // repeated uint32 exceed_module_id = 2;
  inline int exceed_module_id_size() const;
  inline void clear_exceed_module_id();
  static const int kExceedModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 exceed_module_id(int index) const;
  inline void set_exceed_module_id(int index, ::google::protobuf::uint32 value);
  inline void add_exceed_module_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      exceed_module_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_exceed_module_id();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.RequestTaskResourceAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > exceed_module_id_;
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static RequestTaskResourceAck* default_instance_;
};
// -------------------------------------------------------------------

class ReturnTaskResource : public ::google::protobuf::Message {
 public:
  ReturnTaskResource();
  virtual ~ReturnTaskResource();
  
  ReturnTaskResource(const ReturnTaskResource& from);
  
  inline ReturnTaskResource& operator=(const ReturnTaskResource& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnTaskResource& default_instance();
  
  void Swap(ReturnTaskResource* other);
  
  // implements Message ----------------------------------------------
  
  ReturnTaskResource* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnTaskResource& from);
  void MergeFrom(const ReturnTaskResource& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // repeated .FwmRcProto.EachModuleRequestOrReturnResourceInfo module_return_resource_info = 3;
  inline int module_return_resource_info_size() const;
  inline void clear_module_return_resource_info();
  static const int kModuleReturnResourceInfoFieldNumber = 3;
  inline const ::FwmRcProto::EachModuleRequestOrReturnResourceInfo& module_return_resource_info(int index) const;
  inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* mutable_module_return_resource_info(int index);
  inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* add_module_return_resource_info();
  inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >&
      module_return_resource_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >*
      mutable_module_return_resource_info();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.ReturnTaskResource)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo > module_return_resource_info_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static ReturnTaskResource* default_instance_;
};
// -------------------------------------------------------------------

class ReturnTaskResourceAck : public ::google::protobuf::Message {
 public:
  ReturnTaskResourceAck();
  virtual ~ReturnTaskResourceAck();
  
  ReturnTaskResourceAck(const ReturnTaskResourceAck& from);
  
  inline ReturnTaskResourceAck& operator=(const ReturnTaskResourceAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReturnTaskResourceAck& default_instance();
  
  void Swap(ReturnTaskResourceAck* other);
  
  // implements Message ----------------------------------------------
  
  ReturnTaskResourceAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReturnTaskResourceAck& from);
  void MergeFrom(const ReturnTaskResourceAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.ReturnTaskResourceAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static ReturnTaskResourceAck* default_instance_;
};
// -------------------------------------------------------------------

class StopModule : public ::google::protobuf::Message {
 public:
  StopModule();
  virtual ~StopModule();
  
  StopModule(const StopModule& from);
  
  inline StopModule& operator=(const StopModule& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopModule& default_instance();
  
  void Swap(StopModule* other);
  
  // implements Message ----------------------------------------------
  
  StopModule* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopModule& from);
  void MergeFrom(const StopModule& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // repeated uint32 stop_module_id = 3;
  inline int stop_module_id_size() const;
  inline void clear_stop_module_id();
  static const int kStopModuleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 stop_module_id(int index) const;
  inline void set_stop_module_id(int index, ::google::protobuf::uint32 value);
  inline void add_stop_module_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stop_module_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stop_module_id();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.StopModule)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stop_module_id_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static StopModule* default_instance_;
};
// -------------------------------------------------------------------

class StopModuleAck : public ::google::protobuf::Message {
 public:
  StopModuleAck();
  virtual ~StopModuleAck();
  
  StopModuleAck(const StopModuleAck& from);
  
  inline StopModuleAck& operator=(const StopModuleAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StopModuleAck& default_instance();
  
  void Swap(StopModuleAck* other);
  
  // implements Message ----------------------------------------------
  
  StopModuleAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StopModuleAck& from);
  void MergeFrom(const StopModuleAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // repeated uint32 stop_module_id = 2;
  inline int stop_module_id_size() const;
  inline void clear_stop_module_id();
  static const int kStopModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 stop_module_id(int index) const;
  inline void set_stop_module_id(int index, ::google::protobuf::uint32 value);
  inline void add_stop_module_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stop_module_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stop_module_id();
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.StopModuleAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stop_module_id_;
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static StopModuleAck* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatInfo : public ::google::protobuf::Message {
 public:
  HeartBeatInfo();
  virtual ~HeartBeatInfo();
  
  HeartBeatInfo(const HeartBeatInfo& from);
  
  inline HeartBeatInfo& operator=(const HeartBeatInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatInfo& default_instance();
  
  void Swap(HeartBeatInfo* other);
  
  // implements Message ----------------------------------------------
  
  HeartBeatInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatInfo& from);
  void MergeFrom(const HeartBeatInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.HeartBeatInfo)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static HeartBeatInfo* default_instance_;
};
// -------------------------------------------------------------------

class HeartBeatInfoAck : public ::google::protobuf::Message {
 public:
  HeartBeatInfoAck();
  virtual ~HeartBeatInfoAck();
  
  HeartBeatInfoAck(const HeartBeatInfoAck& from);
  
  inline HeartBeatInfoAck& operator=(const HeartBeatInfoAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatInfoAck& default_instance();
  
  void Swap(HeartBeatInfoAck* other);
  
  // implements Message ----------------------------------------------
  
  HeartBeatInfoAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HeartBeatInfoAck& from);
  void MergeFrom(const HeartBeatInfoAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.HeartBeatInfoAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static HeartBeatInfoAck* default_instance_;
};
// -------------------------------------------------------------------

class CloseFrameworkInstanceInfo : public ::google::protobuf::Message {
 public:
  CloseFrameworkInstanceInfo();
  virtual ~CloseFrameworkInstanceInfo();
  
  CloseFrameworkInstanceInfo(const CloseFrameworkInstanceInfo& from);
  
  inline CloseFrameworkInstanceInfo& operator=(const CloseFrameworkInstanceInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseFrameworkInstanceInfo& default_instance();
  
  void Swap(CloseFrameworkInstanceInfo* other);
  
  // implements Message ----------------------------------------------
  
  CloseFrameworkInstanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseFrameworkInstanceInfo& from);
  void MergeFrom(const CloseFrameworkInstanceInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
  inline bool has_framework_instance_info() const;
  inline void clear_framework_instance_info();
  static const int kFrameworkInstanceInfoFieldNumber = 1;
  inline const ::FwmRcProto::FrameworkInstanceInfo& framework_instance_info() const;
  inline ::FwmRcProto::FrameworkInstanceInfo* mutable_framework_instance_info();
  inline ::FwmRcProto::FrameworkInstanceInfo* release_framework_instance_info();
  
  // required uint32 self_module_id = 2;
  inline bool has_self_module_id() const;
  inline void clear_self_module_id();
  static const int kSelfModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 self_module_id() const;
  inline void set_self_module_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.CloseFrameworkInstanceInfo)
 private:
  inline void set_has_framework_instance_info();
  inline void clear_has_framework_instance_info();
  inline void set_has_self_module_id();
  inline void clear_has_self_module_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::FwmRcProto::FrameworkInstanceInfo* framework_instance_info_;
  ::google::protobuf::uint32 self_module_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static CloseFrameworkInstanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class CloseFrameworkInstanceInfoAck : public ::google::protobuf::Message {
 public:
  CloseFrameworkInstanceInfoAck();
  virtual ~CloseFrameworkInstanceInfoAck();
  
  CloseFrameworkInstanceInfoAck(const CloseFrameworkInstanceInfoAck& from);
  
  inline CloseFrameworkInstanceInfoAck& operator=(const CloseFrameworkInstanceInfoAck& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseFrameworkInstanceInfoAck& default_instance();
  
  void Swap(CloseFrameworkInstanceInfoAck* other);
  
  // implements Message ----------------------------------------------
  
  CloseFrameworkInstanceInfoAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CloseFrameworkInstanceInfoAck& from);
  void MergeFrom(const CloseFrameworkInstanceInfoAck& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 statuscode = 1;
  inline bool has_statuscode() const;
  inline void clear_statuscode();
  static const int kStatuscodeFieldNumber = 1;
  inline ::google::protobuf::int32 statuscode() const;
  inline void set_statuscode(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:FwmRcProto.CloseFrameworkInstanceInfoAck)
 private:
  inline void set_has_statuscode();
  inline void clear_has_statuscode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 statuscode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_FwmRcProtocol_2eproto();
  friend void protobuf_AssignDesc_FwmRcProtocol_2eproto();
  friend void protobuf_ShutdownFile_FwmRcProtocol_2eproto();
  
  void InitAsDefaultInstance();
  static CloseFrameworkInstanceInfoAck* default_instance_;
};
// ===================================================================


// ===================================================================

// FrameworkInstanceInfo

// required uint32 framework_id = 1;
inline bool FrameworkInstanceInfo::has_framework_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FrameworkInstanceInfo::set_has_framework_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FrameworkInstanceInfo::clear_has_framework_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FrameworkInstanceInfo::clear_framework_id() {
  framework_id_ = 0u;
  clear_has_framework_id();
}
inline ::google::protobuf::uint32 FrameworkInstanceInfo::framework_id() const {
  return framework_id_;
}
inline void FrameworkInstanceInfo::set_framework_id(::google::protobuf::uint32 value) {
  set_has_framework_id();
  framework_id_ = value;
}

// required uint32 framework_instance_id = 2;
inline bool FrameworkInstanceInfo::has_framework_instance_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FrameworkInstanceInfo::set_has_framework_instance_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FrameworkInstanceInfo::clear_has_framework_instance_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FrameworkInstanceInfo::clear_framework_instance_id() {
  framework_instance_id_ = 0u;
  clear_has_framework_instance_id();
}
inline ::google::protobuf::uint32 FrameworkInstanceInfo::framework_instance_id() const {
  return framework_instance_id_;
}
inline void FrameworkInstanceInfo::set_framework_instance_id(::google::protobuf::uint32 value) {
  set_has_framework_instance_id();
  framework_instance_id_ = value;
}

// -------------------------------------------------------------------

// GpuResourceInfo

// required string gpu_name = 1;
inline bool GpuResourceInfo::has_gpu_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GpuResourceInfo::set_has_gpu_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GpuResourceInfo::clear_has_gpu_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GpuResourceInfo::clear_gpu_name() {
  if (gpu_name_ != &::google::protobuf::internal::kEmptyString) {
    gpu_name_->clear();
  }
  clear_has_gpu_name();
}
inline const ::std::string& GpuResourceInfo::gpu_name() const {
  return *gpu_name_;
}
inline void GpuResourceInfo::set_gpu_name(const ::std::string& value) {
  set_has_gpu_name();
  if (gpu_name_ == &::google::protobuf::internal::kEmptyString) {
    gpu_name_ = new ::std::string;
  }
  gpu_name_->assign(value);
}
inline void GpuResourceInfo::set_gpu_name(const char* value) {
  set_has_gpu_name();
  if (gpu_name_ == &::google::protobuf::internal::kEmptyString) {
    gpu_name_ = new ::std::string;
  }
  gpu_name_->assign(value);
}
inline void GpuResourceInfo::set_gpu_name(const char* value, size_t size) {
  set_has_gpu_name();
  if (gpu_name_ == &::google::protobuf::internal::kEmptyString) {
    gpu_name_ = new ::std::string;
  }
  gpu_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GpuResourceInfo::mutable_gpu_name() {
  set_has_gpu_name();
  if (gpu_name_ == &::google::protobuf::internal::kEmptyString) {
    gpu_name_ = new ::std::string;
  }
  return gpu_name_;
}
inline ::std::string* GpuResourceInfo::release_gpu_name() {
  clear_has_gpu_name();
  if (gpu_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = gpu_name_;
    gpu_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 gpu_mem_size = 2;
inline bool GpuResourceInfo::has_gpu_mem_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GpuResourceInfo::set_has_gpu_mem_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GpuResourceInfo::clear_has_gpu_mem_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GpuResourceInfo::clear_gpu_mem_size() {
  gpu_mem_size_ = 0u;
  clear_has_gpu_mem_size();
}
inline ::google::protobuf::uint32 GpuResourceInfo::gpu_mem_size() const {
  return gpu_mem_size_;
}
inline void GpuResourceInfo::set_gpu_mem_size(::google::protobuf::uint32 value) {
  set_has_gpu_mem_size();
  gpu_mem_size_ = value;
}

// -------------------------------------------------------------------

// ResourceInfo

// required double cpu_num = 1;
inline bool ResourceInfo::has_cpu_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ResourceInfo::set_has_cpu_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ResourceInfo::clear_has_cpu_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ResourceInfo::clear_cpu_num() {
  cpu_num_ = 0;
  clear_has_cpu_num();
}
inline double ResourceInfo::cpu_num() const {
  return cpu_num_;
}
inline void ResourceInfo::set_cpu_num(double value) {
  set_has_cpu_num();
  cpu_num_ = value;
}

// required uint32 cpu_mem_size = 2;
inline bool ResourceInfo::has_cpu_mem_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ResourceInfo::set_has_cpu_mem_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ResourceInfo::clear_has_cpu_mem_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ResourceInfo::clear_cpu_mem_size() {
  cpu_mem_size_ = 0u;
  clear_has_cpu_mem_size();
}
inline ::google::protobuf::uint32 ResourceInfo::cpu_mem_size() const {
  return cpu_mem_size_;
}
inline void ResourceInfo::set_cpu_mem_size(::google::protobuf::uint32 value) {
  set_has_cpu_mem_size();
  cpu_mem_size_ = value;
}

// optional uint32 gpu_num = 3;
inline bool ResourceInfo::has_gpu_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ResourceInfo::set_has_gpu_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ResourceInfo::clear_has_gpu_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ResourceInfo::clear_gpu_num() {
  gpu_num_ = 0u;
  clear_has_gpu_num();
}
inline ::google::protobuf::uint32 ResourceInfo::gpu_num() const {
  return gpu_num_;
}
inline void ResourceInfo::set_gpu_num(::google::protobuf::uint32 value) {
  set_has_gpu_num();
  gpu_num_ = value;
}

// repeated .FwmRcProto.GpuResourceInfo gpu_resource_info = 4;
inline int ResourceInfo::gpu_resource_info_size() const {
  return gpu_resource_info_.size();
}
inline void ResourceInfo::clear_gpu_resource_info() {
  gpu_resource_info_.Clear();
}
inline const ::FwmRcProto::GpuResourceInfo& ResourceInfo::gpu_resource_info(int index) const {
  return gpu_resource_info_.Get(index);
}
inline ::FwmRcProto::GpuResourceInfo* ResourceInfo::mutable_gpu_resource_info(int index) {
  return gpu_resource_info_.Mutable(index);
}
inline ::FwmRcProto::GpuResourceInfo* ResourceInfo::add_gpu_resource_info() {
  return gpu_resource_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::GpuResourceInfo >&
ResourceInfo::gpu_resource_info() const {
  return gpu_resource_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::GpuResourceInfo >*
ResourceInfo::mutable_gpu_resource_info() {
  return &gpu_resource_info_;
}

// -------------------------------------------------------------------

// EachModuleRequestOrReturnResourceInfo

// required uint32 resource_request_or_return_to_module_id = 1;
inline bool EachModuleRequestOrReturnResourceInfo::has_resource_request_or_return_to_module_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EachModuleRequestOrReturnResourceInfo::set_has_resource_request_or_return_to_module_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EachModuleRequestOrReturnResourceInfo::clear_has_resource_request_or_return_to_module_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EachModuleRequestOrReturnResourceInfo::clear_resource_request_or_return_to_module_id() {
  resource_request_or_return_to_module_id_ = 0u;
  clear_has_resource_request_or_return_to_module_id();
}
inline ::google::protobuf::uint32 EachModuleRequestOrReturnResourceInfo::resource_request_or_return_to_module_id() const {
  return resource_request_or_return_to_module_id_;
}
inline void EachModuleRequestOrReturnResourceInfo::set_resource_request_or_return_to_module_id(::google::protobuf::uint32 value) {
  set_has_resource_request_or_return_to_module_id();
  resource_request_or_return_to_module_id_ = value;
}

// optional .FwmRcProto.ResourceInfo resource_info = 2;
inline bool EachModuleRequestOrReturnResourceInfo::has_resource_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EachModuleRequestOrReturnResourceInfo::set_has_resource_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EachModuleRequestOrReturnResourceInfo::clear_has_resource_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EachModuleRequestOrReturnResourceInfo::clear_resource_info() {
  if (resource_info_ != NULL) resource_info_->::FwmRcProto::ResourceInfo::Clear();
  clear_has_resource_info();
}
inline const ::FwmRcProto::ResourceInfo& EachModuleRequestOrReturnResourceInfo::resource_info() const {
  return resource_info_ != NULL ? *resource_info_ : *default_instance_->resource_info_;
}
inline ::FwmRcProto::ResourceInfo* EachModuleRequestOrReturnResourceInfo::mutable_resource_info() {
  set_has_resource_info();
  if (resource_info_ == NULL) resource_info_ = new ::FwmRcProto::ResourceInfo;
  return resource_info_;
}
inline ::FwmRcProto::ResourceInfo* EachModuleRequestOrReturnResourceInfo::release_resource_info() {
  clear_has_resource_info();
  ::FwmRcProto::ResourceInfo* temp = resource_info_;
  resource_info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// NetAddress

// required string ip = 1;
inline bool NetAddress::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NetAddress::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NetAddress::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NetAddress::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& NetAddress::ip() const {
  return *ip_;
}
inline void NetAddress::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void NetAddress::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void NetAddress::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* NetAddress::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* NetAddress::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional uint32 port = 2;
inline bool NetAddress::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NetAddress::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NetAddress::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NetAddress::clear_port() {
  port_ = 0u;
  clear_has_port();
}
inline ::google::protobuf::uint32 NetAddress::port() const {
  return port_;
}
inline void NetAddress::set_port(::google::protobuf::uint32 value) {
  set_has_port();
  port_ = value;
}

// -------------------------------------------------------------------

// Register

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool Register::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Register::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Register::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Register::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& Register::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* Register::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* Register::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool Register::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Register::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Register::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Register::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 Register::self_module_id() const {
  return self_module_id_;
}
inline void Register::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// optional .FwmRcProto.NetAddress data_search_entry = 3;
inline bool Register::has_data_search_entry() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Register::set_has_data_search_entry() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Register::clear_has_data_search_entry() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Register::clear_data_search_entry() {
  if (data_search_entry_ != NULL) data_search_entry_->::FwmRcProto::NetAddress::Clear();
  clear_has_data_search_entry();
}
inline const ::FwmRcProto::NetAddress& Register::data_search_entry() const {
  return data_search_entry_ != NULL ? *data_search_entry_ : *default_instance_->data_search_entry_;
}
inline ::FwmRcProto::NetAddress* Register::mutable_data_search_entry() {
  set_has_data_search_entry();
  if (data_search_entry_ == NULL) data_search_entry_ = new ::FwmRcProto::NetAddress;
  return data_search_entry_;
}
inline ::FwmRcProto::NetAddress* Register::release_data_search_entry() {
  clear_has_data_search_entry();
  ::FwmRcProto::NetAddress* temp = data_search_entry_;
  data_search_entry_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RegisterAck

// required int32 statuscode = 1;
inline bool RegisterAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 RegisterAck::statuscode() const {
  return statuscode_;
}
inline void RegisterAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// -------------------------------------------------------------------

// EachModuleResourceInfo

// required string ip = 1;
inline bool EachModuleResourceInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EachModuleResourceInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EachModuleResourceInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EachModuleResourceInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::kEmptyString) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& EachModuleResourceInfo::ip() const {
  return *ip_;
}
inline void EachModuleResourceInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void EachModuleResourceInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
}
inline void EachModuleResourceInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* EachModuleResourceInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    ip_ = new ::std::string;
  }
  return ip_;
}
inline ::std::string* EachModuleResourceInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .FwmRcProto.ResourceInfo resource_info = 2;
inline bool EachModuleResourceInfo::has_resource_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EachModuleResourceInfo::set_has_resource_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EachModuleResourceInfo::clear_has_resource_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EachModuleResourceInfo::clear_resource_info() {
  if (resource_info_ != NULL) resource_info_->::FwmRcProto::ResourceInfo::Clear();
  clear_has_resource_info();
}
inline const ::FwmRcProto::ResourceInfo& EachModuleResourceInfo::resource_info() const {
  return resource_info_ != NULL ? *resource_info_ : *default_instance_->resource_info_;
}
inline ::FwmRcProto::ResourceInfo* EachModuleResourceInfo::mutable_resource_info() {
  set_has_resource_info();
  if (resource_info_ == NULL) resource_info_ = new ::FwmRcProto::ResourceInfo;
  return resource_info_;
}
inline ::FwmRcProto::ResourceInfo* EachModuleResourceInfo::release_resource_info() {
  clear_has_resource_info();
  ::FwmRcProto::ResourceInfo* temp = resource_info_;
  resource_info_ = NULL;
  return temp;
}

// optional uint32 listen_port_num = 3;
inline bool EachModuleResourceInfo::has_listen_port_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EachModuleResourceInfo::set_has_listen_port_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EachModuleResourceInfo::clear_has_listen_port_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EachModuleResourceInfo::clear_listen_port_num() {
  listen_port_num_ = 0u;
  clear_has_listen_port_num();
}
inline ::google::protobuf::uint32 EachModuleResourceInfo::listen_port_num() const {
  return listen_port_num_;
}
inline void EachModuleResourceInfo::set_listen_port_num(::google::protobuf::uint32 value) {
  set_has_listen_port_num();
  listen_port_num_ = value;
}

// -------------------------------------------------------------------

// RequestStartSlave

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool RequestStartSlave::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestStartSlave::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestStartSlave::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestStartSlave::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& RequestStartSlave::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* RequestStartSlave::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* RequestStartSlave::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool RequestStartSlave::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestStartSlave::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestStartSlave::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestStartSlave::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 RequestStartSlave::self_module_id() const {
  return self_module_id_;
}
inline void RequestStartSlave::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// repeated .FwmRcProto.EachModuleResourceInfo start_module_resource_info = 3;
inline int RequestStartSlave::start_module_resource_info_size() const {
  return start_module_resource_info_.size();
}
inline void RequestStartSlave::clear_start_module_resource_info() {
  start_module_resource_info_.Clear();
}
inline const ::FwmRcProto::EachModuleResourceInfo& RequestStartSlave::start_module_resource_info(int index) const {
  return start_module_resource_info_.Get(index);
}
inline ::FwmRcProto::EachModuleResourceInfo* RequestStartSlave::mutable_start_module_resource_info(int index) {
  return start_module_resource_info_.Mutable(index);
}
inline ::FwmRcProto::EachModuleResourceInfo* RequestStartSlave::add_start_module_resource_info() {
  return start_module_resource_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleResourceInfo >&
RequestStartSlave::start_module_resource_info() const {
  return start_module_resource_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleResourceInfo >*
RequestStartSlave::mutable_start_module_resource_info() {
  return &start_module_resource_info_;
}

// optional .FwmRcProto.NetAddress FWM_net_address = 4;
inline bool RequestStartSlave::has_fwm_net_address() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RequestStartSlave::set_has_fwm_net_address() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RequestStartSlave::clear_has_fwm_net_address() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RequestStartSlave::clear_fwm_net_address() {
  if (fwm_net_address_ != NULL) fwm_net_address_->::FwmRcProto::NetAddress::Clear();
  clear_has_fwm_net_address();
}
inline const ::FwmRcProto::NetAddress& RequestStartSlave::fwm_net_address() const {
  return fwm_net_address_ != NULL ? *fwm_net_address_ : *default_instance_->fwm_net_address_;
}
inline ::FwmRcProto::NetAddress* RequestStartSlave::mutable_fwm_net_address() {
  set_has_fwm_net_address();
  if (fwm_net_address_ == NULL) fwm_net_address_ = new ::FwmRcProto::NetAddress;
  return fwm_net_address_;
}
inline ::FwmRcProto::NetAddress* RequestStartSlave::release_fwm_net_address() {
  clear_has_fwm_net_address();
  ::FwmRcProto::NetAddress* temp = fwm_net_address_;
  fwm_net_address_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RequestStartSlaveAck

// required int32 statuscode = 1;
inline bool RequestStartSlaveAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestStartSlaveAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestStartSlaveAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestStartSlaveAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 RequestStartSlaveAck::statuscode() const {
  return statuscode_;
}
inline void RequestStartSlaveAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// repeated uint32 module_id = 2;
inline int RequestStartSlaveAck::module_id_size() const {
  return module_id_.size();
}
inline void RequestStartSlaveAck::clear_module_id() {
  module_id_.Clear();
}
inline ::google::protobuf::uint32 RequestStartSlaveAck::module_id(int index) const {
  return module_id_.Get(index);
}
inline void RequestStartSlaveAck::set_module_id(int index, ::google::protobuf::uint32 value) {
  module_id_.Set(index, value);
}
inline void RequestStartSlaveAck::add_module_id(::google::protobuf::uint32 value) {
  module_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestStartSlaveAck::module_id() const {
  return module_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestStartSlaveAck::mutable_module_id() {
  return &module_id_;
}

// -------------------------------------------------------------------

// RequestTaskResource

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool RequestTaskResource::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestTaskResource::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestTaskResource::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestTaskResource::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& RequestTaskResource::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* RequestTaskResource::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* RequestTaskResource::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool RequestTaskResource::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RequestTaskResource::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RequestTaskResource::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RequestTaskResource::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 RequestTaskResource::self_module_id() const {
  return self_module_id_;
}
inline void RequestTaskResource::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// repeated .FwmRcProto.EachModuleRequestOrReturnResourceInfo module_add_resource_info = 3;
inline int RequestTaskResource::module_add_resource_info_size() const {
  return module_add_resource_info_.size();
}
inline void RequestTaskResource::clear_module_add_resource_info() {
  module_add_resource_info_.Clear();
}
inline const ::FwmRcProto::EachModuleRequestOrReturnResourceInfo& RequestTaskResource::module_add_resource_info(int index) const {
  return module_add_resource_info_.Get(index);
}
inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* RequestTaskResource::mutable_module_add_resource_info(int index) {
  return module_add_resource_info_.Mutable(index);
}
inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* RequestTaskResource::add_module_add_resource_info() {
  return module_add_resource_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >&
RequestTaskResource::module_add_resource_info() const {
  return module_add_resource_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >*
RequestTaskResource::mutable_module_add_resource_info() {
  return &module_add_resource_info_;
}

// -------------------------------------------------------------------

// RequestTaskResourceAck

// required int32 statuscode = 1;
inline bool RequestTaskResourceAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RequestTaskResourceAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RequestTaskResourceAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RequestTaskResourceAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 RequestTaskResourceAck::statuscode() const {
  return statuscode_;
}
inline void RequestTaskResourceAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// repeated uint32 exceed_module_id = 2;
inline int RequestTaskResourceAck::exceed_module_id_size() const {
  return exceed_module_id_.size();
}
inline void RequestTaskResourceAck::clear_exceed_module_id() {
  exceed_module_id_.Clear();
}
inline ::google::protobuf::uint32 RequestTaskResourceAck::exceed_module_id(int index) const {
  return exceed_module_id_.Get(index);
}
inline void RequestTaskResourceAck::set_exceed_module_id(int index, ::google::protobuf::uint32 value) {
  exceed_module_id_.Set(index, value);
}
inline void RequestTaskResourceAck::add_exceed_module_id(::google::protobuf::uint32 value) {
  exceed_module_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
RequestTaskResourceAck::exceed_module_id() const {
  return exceed_module_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
RequestTaskResourceAck::mutable_exceed_module_id() {
  return &exceed_module_id_;
}

// -------------------------------------------------------------------

// ReturnTaskResource

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool ReturnTaskResource::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnTaskResource::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnTaskResource::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnTaskResource::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& ReturnTaskResource::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* ReturnTaskResource::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* ReturnTaskResource::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool ReturnTaskResource::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReturnTaskResource::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReturnTaskResource::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReturnTaskResource::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 ReturnTaskResource::self_module_id() const {
  return self_module_id_;
}
inline void ReturnTaskResource::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// repeated .FwmRcProto.EachModuleRequestOrReturnResourceInfo module_return_resource_info = 3;
inline int ReturnTaskResource::module_return_resource_info_size() const {
  return module_return_resource_info_.size();
}
inline void ReturnTaskResource::clear_module_return_resource_info() {
  module_return_resource_info_.Clear();
}
inline const ::FwmRcProto::EachModuleRequestOrReturnResourceInfo& ReturnTaskResource::module_return_resource_info(int index) const {
  return module_return_resource_info_.Get(index);
}
inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* ReturnTaskResource::mutable_module_return_resource_info(int index) {
  return module_return_resource_info_.Mutable(index);
}
inline ::FwmRcProto::EachModuleRequestOrReturnResourceInfo* ReturnTaskResource::add_module_return_resource_info() {
  return module_return_resource_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >&
ReturnTaskResource::module_return_resource_info() const {
  return module_return_resource_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::FwmRcProto::EachModuleRequestOrReturnResourceInfo >*
ReturnTaskResource::mutable_module_return_resource_info() {
  return &module_return_resource_info_;
}

// -------------------------------------------------------------------

// ReturnTaskResourceAck

// required int32 statuscode = 1;
inline bool ReturnTaskResourceAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReturnTaskResourceAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReturnTaskResourceAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReturnTaskResourceAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 ReturnTaskResourceAck::statuscode() const {
  return statuscode_;
}
inline void ReturnTaskResourceAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// -------------------------------------------------------------------

// StopModule

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool StopModule::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopModule::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopModule::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopModule::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& StopModule::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* StopModule::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* StopModule::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool StopModule::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopModule::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StopModule::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StopModule::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 StopModule::self_module_id() const {
  return self_module_id_;
}
inline void StopModule::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// repeated uint32 stop_module_id = 3;
inline int StopModule::stop_module_id_size() const {
  return stop_module_id_.size();
}
inline void StopModule::clear_stop_module_id() {
  stop_module_id_.Clear();
}
inline ::google::protobuf::uint32 StopModule::stop_module_id(int index) const {
  return stop_module_id_.Get(index);
}
inline void StopModule::set_stop_module_id(int index, ::google::protobuf::uint32 value) {
  stop_module_id_.Set(index, value);
}
inline void StopModule::add_stop_module_id(::google::protobuf::uint32 value) {
  stop_module_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StopModule::stop_module_id() const {
  return stop_module_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StopModule::mutable_stop_module_id() {
  return &stop_module_id_;
}

// -------------------------------------------------------------------

// StopModuleAck

// required int32 statuscode = 1;
inline bool StopModuleAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopModuleAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopModuleAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopModuleAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 StopModuleAck::statuscode() const {
  return statuscode_;
}
inline void StopModuleAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// repeated uint32 stop_module_id = 2;
inline int StopModuleAck::stop_module_id_size() const {
  return stop_module_id_.size();
}
inline void StopModuleAck::clear_stop_module_id() {
  stop_module_id_.Clear();
}
inline ::google::protobuf::uint32 StopModuleAck::stop_module_id(int index) const {
  return stop_module_id_.Get(index);
}
inline void StopModuleAck::set_stop_module_id(int index, ::google::protobuf::uint32 value) {
  stop_module_id_.Set(index, value);
}
inline void StopModuleAck::add_stop_module_id(::google::protobuf::uint32 value) {
  stop_module_id_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
StopModuleAck::stop_module_id() const {
  return stop_module_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
StopModuleAck::mutable_stop_module_id() {
  return &stop_module_id_;
}

// -------------------------------------------------------------------

// HeartBeatInfo

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool HeartBeatInfo::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatInfo::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatInfo::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatInfo::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& HeartBeatInfo::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* HeartBeatInfo::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* HeartBeatInfo::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool HeartBeatInfo::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HeartBeatInfo::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HeartBeatInfo::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HeartBeatInfo::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 HeartBeatInfo::self_module_id() const {
  return self_module_id_;
}
inline void HeartBeatInfo::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// -------------------------------------------------------------------

// HeartBeatInfoAck

// required int32 statuscode = 1;
inline bool HeartBeatInfoAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatInfoAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatInfoAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatInfoAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 HeartBeatInfoAck::statuscode() const {
  return statuscode_;
}
inline void HeartBeatInfoAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}

// -------------------------------------------------------------------

// CloseFrameworkInstanceInfo

// required .FwmRcProto.FrameworkInstanceInfo framework_instance_info = 1;
inline bool CloseFrameworkInstanceInfo::has_framework_instance_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseFrameworkInstanceInfo::set_has_framework_instance_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseFrameworkInstanceInfo::clear_has_framework_instance_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseFrameworkInstanceInfo::clear_framework_instance_info() {
  if (framework_instance_info_ != NULL) framework_instance_info_->::FwmRcProto::FrameworkInstanceInfo::Clear();
  clear_has_framework_instance_info();
}
inline const ::FwmRcProto::FrameworkInstanceInfo& CloseFrameworkInstanceInfo::framework_instance_info() const {
  return framework_instance_info_ != NULL ? *framework_instance_info_ : *default_instance_->framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* CloseFrameworkInstanceInfo::mutable_framework_instance_info() {
  set_has_framework_instance_info();
  if (framework_instance_info_ == NULL) framework_instance_info_ = new ::FwmRcProto::FrameworkInstanceInfo;
  return framework_instance_info_;
}
inline ::FwmRcProto::FrameworkInstanceInfo* CloseFrameworkInstanceInfo::release_framework_instance_info() {
  clear_has_framework_instance_info();
  ::FwmRcProto::FrameworkInstanceInfo* temp = framework_instance_info_;
  framework_instance_info_ = NULL;
  return temp;
}

// required uint32 self_module_id = 2;
inline bool CloseFrameworkInstanceInfo::has_self_module_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CloseFrameworkInstanceInfo::set_has_self_module_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CloseFrameworkInstanceInfo::clear_has_self_module_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CloseFrameworkInstanceInfo::clear_self_module_id() {
  self_module_id_ = 0u;
  clear_has_self_module_id();
}
inline ::google::protobuf::uint32 CloseFrameworkInstanceInfo::self_module_id() const {
  return self_module_id_;
}
inline void CloseFrameworkInstanceInfo::set_self_module_id(::google::protobuf::uint32 value) {
  set_has_self_module_id();
  self_module_id_ = value;
}

// -------------------------------------------------------------------

// CloseFrameworkInstanceInfoAck

// required int32 statuscode = 1;
inline bool CloseFrameworkInstanceInfoAck::has_statuscode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CloseFrameworkInstanceInfoAck::set_has_statuscode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CloseFrameworkInstanceInfoAck::clear_has_statuscode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CloseFrameworkInstanceInfoAck::clear_statuscode() {
  statuscode_ = 0;
  clear_has_statuscode();
}
inline ::google::protobuf::int32 CloseFrameworkInstanceInfoAck::statuscode() const {
  return statuscode_;
}
inline void CloseFrameworkInstanceInfoAck::set_statuscode(::google::protobuf::int32 value) {
  set_has_statuscode();
  statuscode_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace FwmRcProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FwmRcProtocol_2eproto__INCLUDED

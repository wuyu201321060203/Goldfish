// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DC_DM_PING.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_DC_DM_PING_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DC_DM_PING_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DM_DC_PONG_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DM_DC_PONG_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDC_5fDM_5fPING_2eproto() {
  protobuf_AddDesc_MSG_5fDC_5fDM_5fPING_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DC_DM_PING.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_DC_DM_PING_descriptor_ = file->message_type(0);
  static const int MSG_DC_DM_PING_offsets_[1] = {
  };
  MSG_DC_DM_PING_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DC_DM_PING_descriptor_,
      MSG_DC_DM_PING::default_instance_,
      MSG_DC_DM_PING_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_PING, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_PING, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DC_DM_PING));
  MSG_DM_DC_PONG_descriptor_ = file->message_type(1);
  static const int MSG_DM_DC_PONG_offsets_[1] = {
  };
  MSG_DM_DC_PONG_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DM_DC_PONG_descriptor_,
      MSG_DM_DC_PONG::default_instance_,
      MSG_DM_DC_PONG_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DM_DC_PONG, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DM_DC_PONG, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DM_DC_PONG));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDC_5fDM_5fPING_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DC_DM_PING_descriptor_, &MSG_DC_DM_PING::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DM_DC_PONG_descriptor_, &MSG_DM_DC_PONG::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDC_5fDM_5fPING_2eproto() {
  delete MSG_DC_DM_PING::default_instance_;
  delete MSG_DC_DM_PING_reflection_;
  delete MSG_DM_DC_PONG::default_instance_;
  delete MSG_DM_DC_PONG_reflection_;
}

void protobuf_AddDesc_MSG_5fDC_5fDM_5fPING_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024MSG_DC_DM_PING.proto\"\020\n\016MSG_DC_DM_PING"
    "\"\020\n\016MSG_DM_DC_PONG", 58);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DC_DM_PING.proto", &protobuf_RegisterTypes);
  MSG_DC_DM_PING::default_instance_ = new MSG_DC_DM_PING();
  MSG_DM_DC_PONG::default_instance_ = new MSG_DM_DC_PONG();
  MSG_DC_DM_PING::default_instance_->InitAsDefaultInstance();
  MSG_DM_DC_PONG::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDC_5fDM_5fPING_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDC_5fDM_5fPING_2eproto {
  StaticDescriptorInitializer_MSG_5fDC_5fDM_5fPING_2eproto() {
    protobuf_AddDesc_MSG_5fDC_5fDM_5fPING_2eproto();
  }
} static_descriptor_initializer_MSG_5fDC_5fDM_5fPING_2eproto_;


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MSG_DC_DM_PING::MSG_DC_DM_PING()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_DC_DM_PING::InitAsDefaultInstance() {
}

MSG_DC_DM_PING::MSG_DC_DM_PING(const MSG_DC_DM_PING& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_DC_DM_PING::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DC_DM_PING::~MSG_DC_DM_PING() {
  SharedDtor();
}

void MSG_DC_DM_PING::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DC_DM_PING::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DC_DM_PING::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DC_DM_PING_descriptor_;
}

const MSG_DC_DM_PING& MSG_DC_DM_PING::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDC_5fDM_5fPING_2eproto();  return *default_instance_;
}

MSG_DC_DM_PING* MSG_DC_DM_PING::default_instance_ = NULL;

MSG_DC_DM_PING* MSG_DC_DM_PING::New() const {
  return new MSG_DC_DM_PING;
}

void MSG_DC_DM_PING::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DC_DM_PING::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MSG_DC_DM_PING::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_DC_DM_PING::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_DC_DM_PING::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DC_DM_PING::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DC_DM_PING* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DC_DM_PING*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DC_DM_PING::MergeFrom(const MSG_DC_DM_PING& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DC_DM_PING::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DC_DM_PING::CopyFrom(const MSG_DC_DM_PING& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DC_DM_PING::IsInitialized() const {
  
  return true;
}

void MSG_DC_DM_PING::Swap(MSG_DC_DM_PING* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DC_DM_PING::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DC_DM_PING_descriptor_;
  metadata.reflection = MSG_DC_DM_PING_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

MSG_DM_DC_PONG::MSG_DM_DC_PONG()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_DM_DC_PONG::InitAsDefaultInstance() {
}

MSG_DM_DC_PONG::MSG_DM_DC_PONG(const MSG_DM_DC_PONG& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_DM_DC_PONG::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DM_DC_PONG::~MSG_DM_DC_PONG() {
  SharedDtor();
}

void MSG_DM_DC_PONG::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MSG_DM_DC_PONG::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DM_DC_PONG::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DM_DC_PONG_descriptor_;
}

const MSG_DM_DC_PONG& MSG_DM_DC_PONG::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDC_5fDM_5fPING_2eproto();  return *default_instance_;
}

MSG_DM_DC_PONG* MSG_DM_DC_PONG::default_instance_ = NULL;

MSG_DM_DC_PONG* MSG_DM_DC_PONG::New() const {
  return new MSG_DM_DC_PONG;
}

void MSG_DM_DC_PONG::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DM_DC_PONG::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void MSG_DM_DC_PONG::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_DM_DC_PONG::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_DM_DC_PONG::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DM_DC_PONG::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DM_DC_PONG* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DM_DC_PONG*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DM_DC_PONG::MergeFrom(const MSG_DM_DC_PONG& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DM_DC_PONG::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DM_DC_PONG::CopyFrom(const MSG_DM_DC_PONG& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DM_DC_PONG::IsInitialized() const {
  
  return true;
}

void MSG_DM_DC_PONG::Swap(MSG_DM_DC_PONG* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DM_DC_PONG::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DM_DC_PONG_descriptor_;
  metadata.reflection = MSG_DM_DC_PONG_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

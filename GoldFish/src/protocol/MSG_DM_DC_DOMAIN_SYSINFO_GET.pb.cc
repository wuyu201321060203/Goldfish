// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MSG_DM_DC_DOMAIN_SYSINFO_GET.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DM_DC_DOMAIN_SYSINFO_GET_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_reflection_ = NULL;
const ::google::protobuf::Descriptor* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto() {
  protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MSG_DM_DC_DOMAIN_SYSINFO_GET.proto");
  GOOGLE_CHECK(file != NULL);
  MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_ = file->message_type(0);
  static const int MSG_DM_DC_DOMAIN_SYSINFO_GET_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DM_DC_DOMAIN_SYSINFO_GET, timestamp_),
  };
  MSG_DM_DC_DOMAIN_SYSINFO_GET_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_,
      MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance_,
      MSG_DM_DC_DOMAIN_SYSINFO_GET_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DM_DC_DOMAIN_SYSINFO_GET, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DM_DC_DOMAIN_SYSINFO_GET, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DM_DC_DOMAIN_SYSINFO_GET));
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_ = file->message_type(1);
  static const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK, statuscode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK, singlenodesysinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK, timestamp_),
  };
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_,
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance_,
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK));
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_ = MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_->nested_type(0);
  static const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO, nodestatus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO, core_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO, memsize_),
  };
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_,
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance_,
      MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_, &MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_, &MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_, &MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto() {
  delete MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance_;
  delete MSG_DM_DC_DOMAIN_SYSINFO_GET_reflection_;
  delete MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance_;
  delete MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_reflection_;
  delete MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance_;
  delete MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_reflection_;
}

void protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\"MSG_DM_DC_DOMAIN_SYSINFO_GET.proto\"1\n\034"
    "MSG_DM_DC_DOMAIN_SYSINFO_GET\022\021\n\ttimestam"
    "p\030\001 \001(\t\"\325\001\n MSG_DC_DM_DOMAIN_SYSINFO_GET"
    "_ACK\022\022\n\nstatusCode\030\001 \001(\005\022H\n\021singleNodeSy"
    "sInfo\030\002 \003(\0132-.MSG_DC_DM_DOMAIN_SYSINFO_G"
    "ET_ACK.CS_SYS_INFO\022\021\n\ttimeStamp\030\003 \001(\t\032@\n"
    "\013CS_SYS_INFO\022\022\n\nnodeStatus\030\001 \001(\t\022\014\n\004core"
    "\030\002 \001(\r\022\017\n\007memSize\030\003 \001(\r", 303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MSG_DM_DC_DOMAIN_SYSINFO_GET.proto", &protobuf_RegisterTypes);
  MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance_ = new MSG_DM_DC_DOMAIN_SYSINFO_GET();
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance_ = new MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK();
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance_ = new MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO();
  MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance_->InitAsDefaultInstance();
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance_->InitAsDefaultInstance();
  MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto {
  StaticDescriptorInitializer_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto() {
    protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto();
  }
} static_descriptor_initializer_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int MSG_DM_DC_DOMAIN_SYSINFO_GET::kTimestampFieldNumber;
#endif  // !_MSC_VER

MSG_DM_DC_DOMAIN_SYSINFO_GET::MSG_DM_DC_DOMAIN_SYSINFO_GET()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::InitAsDefaultInstance() {
}

MSG_DM_DC_DOMAIN_SYSINFO_GET::MSG_DM_DC_DOMAIN_SYSINFO_GET(const MSG_DM_DC_DOMAIN_SYSINFO_GET& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::SharedCtor() {
  _cached_size_ = 0;
  timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DM_DC_DOMAIN_SYSINFO_GET::~MSG_DM_DC_DOMAIN_SYSINFO_GET() {
  SharedDtor();
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::SharedDtor() {
  if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
    delete timestamp_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DM_DC_DOMAIN_SYSINFO_GET::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_;
}

const MSG_DM_DC_DOMAIN_SYSINFO_GET& MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto();  return *default_instance_;
}

MSG_DM_DC_DOMAIN_SYSINFO_GET* MSG_DM_DC_DOMAIN_SYSINFO_GET::default_instance_ = NULL;

MSG_DM_DC_DOMAIN_SYSINFO_GET* MSG_DM_DC_DOMAIN_SYSINFO_GET::New() const {
  return new MSG_DM_DC_DOMAIN_SYSINFO_GET;
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_timestamp()) {
      if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
        timestamp_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DM_DC_DOMAIN_SYSINFO_GET::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string timestamp = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->timestamp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_DM_DC_DOMAIN_SYSINFO_GET::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string timestamp = 1;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->timestamp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_DM_DC_DOMAIN_SYSINFO_GET::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DM_DC_DOMAIN_SYSINFO_GET* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DM_DC_DOMAIN_SYSINFO_GET*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::MergeFrom(const MSG_DM_DC_DOMAIN_SYSINFO_GET& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::CopyFrom(const MSG_DM_DC_DOMAIN_SYSINFO_GET& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DM_DC_DOMAIN_SYSINFO_GET::IsInitialized() const {
  
  return true;
}

void MSG_DM_DC_DOMAIN_SYSINFO_GET::Swap(MSG_DM_DC_DOMAIN_SYSINFO_GET* other) {
  if (other != this) {
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DM_DC_DOMAIN_SYSINFO_GET::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DM_DC_DOMAIN_SYSINFO_GET_descriptor_;
  metadata.reflection = MSG_DM_DC_DOMAIN_SYSINFO_GET_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::kNodeStatusFieldNumber;
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::kCoreFieldNumber;
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::kMemSizeFieldNumber;
#endif  // !_MSC_VER

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::InitAsDefaultInstance() {
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::SharedCtor() {
  _cached_size_ = 0;
  nodestatus_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  core_ = 0u;
  memsize_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::~MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO() {
  SharedDtor();
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::SharedDtor() {
  if (nodestatus_ != &::google::protobuf::internal::kEmptyString) {
    delete nodestatus_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_;
}

const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO& MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto();  return *default_instance_;
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::default_instance_ = NULL;

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::New() const {
  return new MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_nodestatus()) {
      if (nodestatus_ != &::google::protobuf::internal::kEmptyString) {
        nodestatus_->clear();
      }
    }
    core_ = 0u;
    memsize_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nodeStatus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nodestatus()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->nodestatus().data(), this->nodestatus().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_core;
        break;
      }
      
      // optional uint32 core = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_core:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &core_)));
          set_has_core();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_memSize;
        break;
      }
      
      // optional uint32 memSize = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_memSize:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &memsize_)));
          set_has_memsize();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string nodeStatus = 1;
  if (has_nodestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nodestatus().data(), this->nodestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->nodestatus(), output);
  }
  
  // optional uint32 core = 2;
  if (has_core()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->core(), output);
  }
  
  // optional uint32 memSize = 3;
  if (has_memsize()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->memsize(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string nodeStatus = 1;
  if (has_nodestatus()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->nodestatus().data(), this->nodestatus().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nodestatus(), target);
  }
  
  // optional uint32 core = 2;
  if (has_core()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->core(), target);
  }
  
  // optional uint32 memSize = 3;
  if (has_memsize()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->memsize(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string nodeStatus = 1;
    if (has_nodestatus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nodestatus());
    }
    
    // optional uint32 core = 2;
    if (has_core()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->core());
    }
    
    // optional uint32 memSize = 3;
    if (has_memsize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->memsize());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::MergeFrom(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodestatus()) {
      set_nodestatus(from.nodestatus());
    }
    if (from.has_core()) {
      set_core(from.core());
    }
    if (from.has_memsize()) {
      set_memsize(from.memsize());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::CopyFrom(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::IsInitialized() const {
  
  return true;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::Swap(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO* other) {
  if (other != this) {
    std::swap(nodestatus_, other->nodestatus_);
    std::swap(core_, other->core_);
    std::swap(memsize_, other->memsize_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_descriptor_;
  metadata.reflection = MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_CS_SYS_INFO_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::kStatusCodeFieldNumber;
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::kSingleNodeSysInfoFieldNumber;
const int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::kTimeStampFieldNumber;
#endif  // !_MSC_VER

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::InitAsDefaultInstance() {
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::SharedCtor() {
  _cached_size_ = 0;
  statuscode_ = 0;
  timestamp_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::~MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK() {
  SharedDtor();
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::SharedDtor() {
  if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
    delete timestamp_;
  }
  if (this != default_instance_) {
  }
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_;
}

const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK& MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MSG_5fDM_5fDC_5fDOMAIN_5fSYSINFO_5fGET_2eproto();  return *default_instance_;
}

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::default_instance_ = NULL;

MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::New() const {
  return new MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    statuscode_ = 0;
    if (has_timestamp()) {
      if (timestamp_ != &::google::protobuf::internal::kEmptyString) {
        timestamp_->clear();
      }
    }
  }
  singlenodesysinfo_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 statusCode = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &statuscode_)));
          set_has_statuscode();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_singleNodeSysInfo;
        break;
      }
      
      // repeated .MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK.CS_SYS_INFO singleNodeSysInfo = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_singleNodeSysInfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_singlenodesysinfo()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_singleNodeSysInfo;
        if (input->ExpectTag(26)) goto parse_timeStamp;
        break;
      }
      
      // optional string timeStamp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_timeStamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_timestamp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->timestamp().data(), this->timestamp().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 statusCode = 1;
  if (has_statuscode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->statuscode(), output);
  }
  
  // repeated .MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK.CS_SYS_INFO singleNodeSysInfo = 2;
  for (int i = 0; i < this->singlenodesysinfo_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->singlenodesysinfo(i), output);
  }
  
  // optional string timeStamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->timestamp(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 statusCode = 1;
  if (has_statuscode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->statuscode(), target);
  }
  
  // repeated .MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK.CS_SYS_INFO singleNodeSysInfo = 2;
  for (int i = 0; i < this->singlenodesysinfo_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->singlenodesysinfo(i), target);
  }
  
  // optional string timeStamp = 3;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->timestamp().data(), this->timestamp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->timestamp(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 statusCode = 1;
    if (has_statuscode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->statuscode());
    }
    
    // optional string timeStamp = 3;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->timestamp());
    }
    
  }
  // repeated .MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK.CS_SYS_INFO singleNodeSysInfo = 2;
  total_size += 1 * this->singlenodesysinfo_size();
  for (int i = 0; i < this->singlenodesysinfo_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->singlenodesysinfo(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::MergeFrom(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK& from) {
  GOOGLE_CHECK_NE(&from, this);
  singlenodesysinfo_.MergeFrom(from.singlenodesysinfo_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_statuscode()) {
      set_statuscode(from.statuscode());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::CopyFrom(const MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::IsInitialized() const {
  
  return true;
}

void MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::Swap(MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK* other) {
  if (other != this) {
    std::swap(statuscode_, other->statuscode_);
    singlenodesysinfo_.Swap(&other->singlenodesysinfo_);
    std::swap(timestamp_, other->timestamp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_descriptor_;
  metadata.reflection = MSG_DC_DM_DOMAIN_SYSINFO_GET_ACK_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
